conda.enabled = true

params {

    rawdir = "${baseDir}/test"
    outdir = "${baseDir}/results"
    samples = "*R{1,2}*.fastq.gz"
    reference = "${baseDir}/db/ref/Homo_sapiens_assembly38.fasta"
    dict = "${baseDir}/db/ref/Homo_sapiens_assembly38.dict"
    bed = "/mnt/d/Downloads/Germline.bed"
    avail_cpus = Runtime.getRuntime().availableProcessors()
    gatk = "/mnt/d/linux/gatk/gatk"
    bed = "/mnt/d/Downloads/Germline.bed"
    
}

process {

    withName: bwa {

        maxForks = 1

        if (params.avail_cpus <= 4){
		cpus = params.avail_cpus
	    } else {
		cpus = {params.avail_cpus <= 32 ? params.avail_cpus - 2 : params.avail_cpus - 4}
	    }
    }

    withName: rmdup {

        cpus = 2

        memory = 2.GB

        if (params.avail_cpus <= 4){
		maxForks = params.avail_cpus - 1 
	    } else {
		maxForks = params.avail_cpus / 2
	}
    }

    withName: baserecalibrator {

        cpus = 2

        if (params.avail_cpus <= 4){
		maxForks = params.avail_cpus - 1 
	    } else {
		maxForks = params.avail_cpus / 2
	    }

        memory = 4.GB
    }

    withName: recalibrate {

        cpus = 4

        memory = 2.GB

        if (params.avail_cpus <= 4){
		maxForks = params.avail_cpus - 1 
	    } else {
		maxForks = params.avail_cpus / 4
	    }

    }

    withName: haplotypecaller {

        cpus = 2

        memory = 2.GB

        if (params.avail_cpus <= 4){
		maxForks = params.avail_cpus - 1 
	    } else {
		maxForks = params.avail_cpus / 2
	    }

    }

    withName: genotypevcfs {

        cpus = 3

        memory = 2.GB
        
        if (params.avail_cpus <= 4){
		maxForks = params.avail_cpus - 1 
	    } else {
		maxForks = Math.floor(params.avail_cpus / 3)
	    }

    }

    withName: variantfiltration {

        cpus = 2

        memory = 2.GB

        if (params.avail_cpus <= 4){
		maxForks = params.avail_cpus - 1 
	    } else {
		maxForks = params.avail_cpus / 2
	    }

    }

    withName: collectmetrics {

        cpus = 2

        if (params.avail_cpus <= 4){
		maxForks = params.avail_cpus - 1 
	    } else {
		maxForks = params.avail_cpus / 2
	    }
    }
}
